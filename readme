This code is used to test multipathing in an SDN-like environment. A controller application establishes flows in the network based on the parity of the port (TCP). For instance, if there two link-disjoint paths in the network, path1 and path2, then the controller puts the odd-port flows on path1 and the even-port flows on path2. If the application layer code is aware of this then it establish multiple flow of different parity. The end result is better utilization of the network resources. 

-------------------------------------------------------------------
SERVER:

The code is server.c
xxx (198.7.29.154) is the server machine
To run the server, cd to the tcp and run:
username@xxx:~/where_code_is$ ./server -H 198.7.29.154 -P 5555 -F 20
			-H    server IP address
			-P    starting port
			-F    number of listening threads
e.g. when  -P 0  -F 3 the server is listening on ports 0, 1 and 2
--------------------------------------------------------------------
CLIENT:
The code is client.c
yyy is the client machine
To run the client do
username@yyy:~/where_code_is$ ./client -H  198.7.29.154 -P 5555 -M 1 -N 20 -S 1048576 -F ../test-files/linux9
			  -H     server IP address
			  -P     starting port
			  -M     if 0 then all ports will have the same parity (e.g. 0,2,4,6 or 1,3,5,7 where 0 and 1 are the starting ports) 
			  	 if 1 then half the ports are odd (e.g. 0,1,2,3)
			  -N     number of simultaneous TCP senders
			  -S     the size of data in (bytes) passed to TCP by each client thread (we are using 1MB in all experiments)
			  -F     the file to be transferred